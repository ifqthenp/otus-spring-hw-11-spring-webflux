plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'application'
    id 'com.adarshr.test-logger' version '1.6.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.otus'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    spockVersion = '1.2-groovy-2.5'
    groovyVersion = '2.5.6'
    javaAssistVersion = '3.18.2-GA'
    mongockVersion = '2.0.0'
    junitJupiterVersion = '5.3.2'
    junitVintageVersion = '5.3.2'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation "org.javassist:javassist:${javaAssistVersion}"
    implementation "com.github.cloudyrock.mongock:mongock-core:${mongockVersion}"
    implementation "com.github.cloudyrock.mongock:mongock-spring:${mongockVersion}"
    implementation "com.github.cloudyrock.mongock:mongock-jongo:${mongockVersion}"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly(
        "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
        "org.junit.vintage:junit-vintage-engine:${junitVintageVersion}"
    )
}

application {
    mainClassName = 'com.otus.hw_11.App'
}

wrapper {
    gradleVersion = '5.2.1'
}

test {
    testlogger {
        theme 'standard-parallel'
        showStandardStreams = true
    }
    testLogging {
        exceptionFormat = 'full'
    }
}

clean.doFirst {
    delete 'out'
}
